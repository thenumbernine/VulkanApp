distName='test'
distType='app'
--[=[ for compiling tut code
libs:append{'stb', 'glfw'}
--]=]
-- [=[ noral deps
depends:append{
	'../SDLApp',
	'../Tensor',
	'../Common',
	'../Image',
}
--]=]
libs:insert'vulkan'

if platform == 'linux' then
	env:addPackages'tinyobjloader'
end

local fns = {
	{src='shader.vert', dst='shader-vert.spv'},
	{src='shader.frag', dst='shader-frag.spv'},
}
for _,fn in ipairs(fns) do
	env.targets:add{
		dsts = {env:getResourcePath()..'/'..fn.dst},
		srcs = {'res/'..fn.src},
		rule = function(r)
			env:exec('glslangValidator -V "'..r.srcs[1]..'" -o "'..r.dsts[1]..'"')
		end,
	}
end
function postBuildDist()
	env.targets:run(table.mapi(fns, function(fn)
		return env:getResourcePath()..'/'..fn.dst
	end):unpack())
end
